{"version":3,"sources":["pages/Home.js","utils/shopSlice.js","utils/globalState.js","App.js","index.js"],"names":["Home","class","shopSlice","createSlice","name","initialState","products","cart","cartOpen","categories","currentCategory","reducers","updateProducts","state","action","payload","addNewToCart","push","product","addMultipleToCart","concat","updateCarQuantity","map","_id","purchaseQuantity","removeFromCart","filter","clearCart","toggleCart","updateCategories","updateCurrentCategories","actions","configureStore","reducer","shop","shopReducer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","store","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAGe,SAASA,IACtB,OACE,+BAEE,sBAAKC,MAAM,QAAO,UAChB,qBAAKA,MAAM,OAAM,oBACjB,qBAAKA,MAAM,OAAM,wBAMzB,C,oBCbaC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,SAAU,GACVC,KAAM,GACNC,UAAU,EACVC,WAAY,GACZC,gBAAiB,IAEnBC,SAAU,CACRC,eAAgB,SAACC,EAAOC,GACtBD,EAAMP,SAAWQ,EAAOC,QAAQT,QAClC,EAEAU,aAAc,SAACH,EAAOC,GACpBD,EAAMN,KAAKU,KAAKH,EAAOC,QAAQG,QACjC,EAEAC,kBAAmB,SAACN,EAAOC,GACzBD,EAAMN,KAAKa,OAAON,EAAOC,QAAQT,SACnC,EAEAe,kBAAmB,SAACR,EAAOC,GACzBD,EAAMN,KAAOM,EAAMN,KAAKe,KAAI,SAACJ,GAI3B,OAHIJ,EAAOC,QAAQQ,MAAQL,EAAQK,MACjCL,EAAQM,iBAAmBV,EAAOC,QAAQS,kBAErCN,CACT,GACF,EAEAO,eAAgB,SAACZ,EAAOC,GACtBD,EAAMN,KAAOM,EAAMN,KAAKmB,QACtB,SAACR,GAAO,OAAKA,EAAQK,MAAQT,EAAOC,QAAQQ,GAAG,GAEnD,EAEAI,UAAW,SAACd,GACV,EAEFe,WAAY,SAACf,GACXA,EAAML,UAAYK,EAAML,QAC1B,EAEAqB,iBAAkB,SAAChB,EAAOC,GACxBD,EAAMJ,WAAaK,EAAOC,QAAQN,UACpC,EAEAqB,wBAAyB,SAACjB,EAAOC,GAC/BD,EAAMH,gBAAkBI,EAAOC,QAAQL,eACzC,KAIG,EAUHR,EAAU6B,QAEC7B,GAXC,EAAdU,eACY,EAAZI,aACiB,EAAjBG,kBACiB,EAAjBE,kBACc,EAAdI,eACS,EAATE,UACU,EAAVC,WACgB,EAAhBC,iBACuB,EAAvBC,wBAGa5B,EAAiB,SCjEjB8B,cAAe,CAC5BC,QAAS,CACPC,KAAMC,KCYJC,EAAWC,YAAe,CAC9BC,IAAK,aAGDC,EAAWC,aAAW,SAACC,EAAE,GAAkB,IAAfC,EAAO,EAAPA,QAC1BC,EAAQC,aAAaC,QAAQ,YACnC,MAAO,CACLH,QAAQ,2BACHA,GAAO,IACVI,cAAeH,EAAK,iBAAaA,GAAU,KAGjD,IAEMI,EAAS,IAAIC,IAAa,CAC9BC,KAAMV,EAASnB,OAAOgB,GACtBc,MAAO,IAAIC,MAmBEC,MAhBf,WACE,OACE,cAACC,EAAA,EAAc,CAACN,OAAQA,EAAO,SAC7B,cAAC,IAAM,UACL,8BACE,cAAC,IAAQ,CAACO,MAAOA,EAAM,SACrB,cAAC,IAAM,UACL,cAAC,IAAK,CAACC,KAAK,IAAIC,QAAS,cAACxD,EAAI,eAO5C,EC7CAyD,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.052be6a4.chunk.js","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nexport default function Home() {\n  return (\n    <main>\n      {/* title / sign */}\n      <div class=\"title\">\n        <div class=\"neon\">Will B</div>\n        <div class=\"flux\">Hangry</div>\n      </div>\n\n      {/* view products */}\n    </main>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState: {\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  },\n  reducers: {\n    updateProducts: (state, action) => {\n      state.products = action.payload.products;\n    },\n\n    addNewToCart: (state, action) => {\n      state.cart.push(action.payload.product);\n    },\n\n    addMultipleToCart: (state, action) => {\n      state.cart.concat(action.payload.products);\n    },\n\n    updateCarQuantity: (state, action) => {\n      state.cart = state.cart.map((product) => {\n        if (action.payload._id === product._id) {\n          product.purchaseQuantity = action.payload.purchaseQuantity;\n        }\n        return product;\n      });\n    },\n\n    removeFromCart: (state, action) => {\n      state.cart = state.cart.filter(\n        (product) => product._id !== action.payload._id\n      );\n    },\n\n    clearCart: (state) => {\n      // state.value -= 1;\n    },\n    toggleCart: (state) => {\n      state.cartOpen = !state.cartOpen;\n    },\n\n    updateCategories: (state, action) => {\n      state.categories = action.payload.categories;\n    },\n\n    updateCurrentCategories: (state, action) => {\n      state.currentCategory = action.payload.currentCategory;\n    },\n  },\n});\n\nexport const {\n  updateProducts,\n  addNewToCart,\n  addMultipleToCart,\n  updateCarQuantity,\n  removeFromCart,\n  clearCart,\n  toggleCart,\n  updateCategories,\n  updateCurrentCategories,\n} = shopSlice.actions;\n\nexport default shopSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport shopReducer from './shopSlice';\n\nexport default configureStore({\n  reducer: {\n    shop: shopReducer,\n  },\n});\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport \"./App.css\";\n\nimport Home from \"./pages/Home\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./utils/globalState\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n            </Routes>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}